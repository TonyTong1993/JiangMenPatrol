package com.ecity.android.httpexecutor.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.ecity.android.httpexecutor.model.CacheFeedbackData;
import com.ecity.android.httpexecutor.model.CoverLineRecordData;
import com.ecity.android.httpexecutor.model.RequestRecord;

import com.ecity.android.httpexecutor.greendao.CacheFeedbackDataDao;
import com.ecity.android.httpexecutor.greendao.CoverLineRecordDataDao;
import com.ecity.android.httpexecutor.greendao.RequestRecordDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cacheFeedbackDataDaoConfig;
    private final DaoConfig coverLineRecordDataDaoConfig;
    private final DaoConfig requestRecordDaoConfig;

    private final CacheFeedbackDataDao cacheFeedbackDataDao;
    private final CoverLineRecordDataDao coverLineRecordDataDao;
    private final RequestRecordDao requestRecordDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cacheFeedbackDataDaoConfig = daoConfigMap.get(CacheFeedbackDataDao.class).clone();
        cacheFeedbackDataDaoConfig.initIdentityScope(type);

        coverLineRecordDataDaoConfig = daoConfigMap.get(CoverLineRecordDataDao.class).clone();
        coverLineRecordDataDaoConfig.initIdentityScope(type);

        requestRecordDaoConfig = daoConfigMap.get(RequestRecordDao.class).clone();
        requestRecordDaoConfig.initIdentityScope(type);

        cacheFeedbackDataDao = new CacheFeedbackDataDao(cacheFeedbackDataDaoConfig, this);
        coverLineRecordDataDao = new CoverLineRecordDataDao(coverLineRecordDataDaoConfig, this);
        requestRecordDao = new RequestRecordDao(requestRecordDaoConfig, this);

        registerDao(CacheFeedbackData.class, cacheFeedbackDataDao);
        registerDao(CoverLineRecordData.class, coverLineRecordDataDao);
        registerDao(RequestRecord.class, requestRecordDao);
    }
    
    public void clear() {
        cacheFeedbackDataDaoConfig.clearIdentityScope();
        coverLineRecordDataDaoConfig.clearIdentityScope();
        requestRecordDaoConfig.clearIdentityScope();
    }

    public CacheFeedbackDataDao getCacheFeedbackDataDao() {
        return cacheFeedbackDataDao;
    }

    public CoverLineRecordDataDao getCoverLineRecordDataDao() {
        return coverLineRecordDataDao;
    }

    public RequestRecordDao getRequestRecordDao() {
        return requestRecordDao;
    }

}
